(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{146:function(e,n,o){o(147),o(388),e.exports=o(384)},368:function(e,n,o){var t={"./01-title.md":369,"./02-precourse-knockout/01-title.md":370,"./02-precourse-knockout/02-precourse-module-knockout.md":371,"./03-module1/01-title.md":372,"./03-module1/02-overview/01-app-overview.md":373,"./03-module1/02-overview/02-contributing.md":374,"./03-module1/02-overview/03-major-concepts.md":375,"./03-module1/02-overview/04-extending-arches.md":376,"./09-project-package/01-module9_draft.md":377,"./09-project-package/09-project-package/01-lesson-goals.md":378,"./09-project-package/09-project-package/02-projects-overview.md":379,"./09-project-package/09-project-package/03-projects-directory-structure.md":380,"./09-project-package/09-project-package/04-packages-overview.md":381,"./09-project-package/09-project-package/05-packages-directory-structure.md":382,"./09-project-package/09-project-package/06-packages-details.md":383};function i(e){var n=a(e);return o(n)}function a(e){var n=t[e];if(!(n+1)){var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}return n}i.keys=function(){return Object.keys(t)},i.resolve=a,e.exports=i,i.id=368},369:function(e,n){e.exports='<h1 id="arches-developer-training">Arches Developer Training</h1>\n<h2 id="fall-2018">Fall 2018</h2>\n'},370:function(e,n){e.exports='\x3c!-- sectionTitle: KnockoutJS Intro --\x3e\n<h1 id="knockoutjs">KnockoutJS</h1>\n<h2 id="an-introduction">an Introduction</h2>\n'},371:function(e,n){e.exports="<p><strong>Lesson Overview</strong></p>\n<p>In this lesson we will briefly discuss each of the following Knockout concepts with examples and an explanation of how they are used in Arches</p>\n<ul>\n<li>ViewModels</li>\n<li>Data binding</li>\n<li>Computeds/subscriptions</li>\n<li>Control flow</li>\n<li>Scope</li>\n<li>Components</li>\n</ul>\n"},372:function(e,n){e.exports='\x3c!-- sectionTitle: The Arches Platform --\x3e\n<h1 id="module-1">Module 1</h1>\n<h2 id="the-arches-platform">The Arches Platform</h2>\n<h2 id="and">and</h2>\n<h2 id="core-technical-concepts">Core Technical Concepts</h2>\n'},373:function(e,n){e.exports='<p>Arches Application Overview</p>\n<ul>\n<li>Design goals</li>\n<li>Core technologies and system architecture</li>\n</ul>\n<p class="footer"><div class="logo"></div></p>\n'},374:function(e,n){e.exports='<p>Contributing to Arches</p>\n<ul>\n<li>Submitting tickets/zenhub</li>\n<li>Writing documentation</li>\n<li>Code conventions and submitting pull requests</li>\n<li>Developer Code of Conduct</li>\n<li>Where to get more help</li>\n</ul>\n<p class="footer"><div class="logo"></div></p>\n'},375:function(e,n){e.exports='<p>Major Arches Concepts</p>\n<ul>\n<li>Graphs, datatypes, cards, tiles ...</li>\n</ul>\n<p class="footer"><div class="logo"></div></p>\n'},376:function(e,n){e.exports='<p>Extending Arches for your application</p>\n<ul>\n<li>Building custom components (datatypes, widgets, cards, reports)</li>\n<li>Putting it all together: Package development</li>\n</ul>\n<p class="footer"><div class="logo"></div></p>\n'},377:function(e,n){e.exports='\x3c!-- sectionTitle: Projects and Packages --\x3e\n<h1 id="module-9">Module 9</h1>\n<h2 id="projects-and-packages">Projects and Packages</h2>\n'},378:function(e,n){e.exports="<p><strong><em>Lesson Goals</em></strong></p>\n<ul>\n<li>To understand the distinction between a project and a package</li>\n<li>To be familiar with the directory structure of a project and a package</li>\n<li>To understand how to create and maintain your own project and/or package</li>\n<li>To understand how Arches applications and packages are related</li>\n<li>To know how to host and contribute to a project or package</li>\n</ul>\n"},379:function(e,n){e.exports='<p><strong>Projects</strong></p>\n<ul>\n<li>Projects facilitate all of the customizations that you will need to make one installation of Arches different from the next</li>\n<li>You can update html to modify web page branding, and add functions, datatypes, and widgets to introduce new functionality</li>\n<li>A project sits outside of your virtual environment, and can thus be transferred to any other system where Arches is installed\n(source: arches documentation, <a href="https://arches.readthedocs.io/en/stable/projects-and-packages/#projects">https://arches.readthedocs.io/en/stable/projects-and-packages/#projects</a>)</li>\n<li>Contains your site specific django settings<ul>\n<li>(show hierarchy of settings files and how the inheritance structure works)</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>Many project-specific settings are defined in settings.py. You should use settings_local.py to store variables that you may want to keep out of the public eye (db passwords, API keys, etc.).</li>\n<li>The templates directory holds HTML templates that you can modify to customize the branding and general appearance of your project.</li>\n</ul>\n'},380:function(e,n){e.exports="<p><strong>Project Directory Structure</strong></p>\n<pre><code>Example Project\n├── datatypes\n├── functions\n├── logs\n├── media\n│   ├── img\n│   │   └── landing\n│   ├── js\n│   │   ├── reports\n│   │   └── views\n│   │       └── components\n│   └── packages\n├── node_modules\n├── system_settings\n├── templates\n│   └── views\n│       └── components\n│           ├── functions\n│           └── widgets\n├── uploadedfiles\n└── widgets\n</code></pre>"},381:function(e,n){e.exports="<p><strong>Packages</strong></p>\n<ul>\n<li>A package contains all the data you&#39;d like loaded into your Arches implementation<ul>\n<li>business data</li>\n<li>concepts/reference data</li>\n<li>resource models/branches</li>\n<li>datatypes/functions/widgets</li>\n<li>map layers</li>\n</ul>\n</li>\n<li>Each of these components can be loaded separately</li>\n<li>The whole package can be loaded from local file system or directly from github</li>\n<li>Also contains package specific settings (e.g. load order of business data, date format of business data)</li>\n<li>A local package may be updated if you make changes in your deployment of Arches (eg changes to branches and/or resource models)</li>\n</ul>\n"},382:function(e,n){e.exports="<p><strong>Package Directory Structure</strong></p>\n<pre><code>Example Package\n├── business_data\n│   ├── files\n│   └── relations\n├── extensions\n│   ├── datatypes\n│   ├── functions\n│   └── widgets\n├── graphs\n│   ├── branches\n│   └── resource_models\n├── map_layers\n│   ├── mapbox_spec_json\n│   │   ├── basemaps\n│   │   └── overlays\n│   └── tile_server\n│       ├── basemaps\n│       └── overlays\n├── preliminary_sql\n├── reference_data\n│   ├── collections\n│   └── concepts\n├── staging_data\n└── system_settings\n</code></pre>"},383:function(e,n){e.exports="<p><strong>Package Config vs Package Settings</strong></p>\n<p>Package Settings</p>\n<ul>\n<li>The django settings relevant to your project not managed in system settings. For example, you may want to include your time wheel configuration and your analysis SRID settings in this file so that users do not have add these settings manually to their own settings file after loading your package. This file is copied into your project when the package is loaded.</li>\n</ul>\n<p>Package Config</p>\n<ul>\n<li>This file allows you to configure other parts of the data loading process. For example, the order in which the business data files are loaded</li>\n</ul>\n"},385:function(e,n,o){var t=o(386);"string"==typeof t&&(t=[[e.i,t,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};o(51)(t,i);t.locals&&(e.exports=t.locals)},386:function(e,n,o){}},[[146,5,3]],[4]]);